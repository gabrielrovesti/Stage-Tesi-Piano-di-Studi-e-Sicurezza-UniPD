Here is how this smart contract works:

1 - The DID struct contains the unique ID of the DID, 
the holder's Ethereum address, the issuer's Ethereum address, 
the verifier's Ethereum address, and a boolean flag indicating whether the DID is verified or not.

2 - The dids mapping maps Ethereum addresses to their corresponding DID struct.

3 - The issuers mapping maps Ethereum addresses to a boolean flag indicating 
whether they are authorized issuers.

4 - The verifiers mapping maps Ethereum addresses to a boolean flag 
indicating whether they are authorized verifiers.

5 - The registerDID function allows a user to register their DID by 
providing their Ethereum address, the Ethereum address of the issuer, 
and the Ethereum address of the verifier. This function creates a new DID struct 
and adds it to the dids mapping. It also checks that the issuer and verifier 
are authorized by checking their addresses in the issuers and verifiers mappings, respectively.

6 - The verifyDID function allows a verifier to verify a user's DID. 
This function checks that the verifier is authorized and that the DID is registered.
If these conditions are met, it sets the isVerified flag of the corresponding DID struct to true.

7 - The addIssuer function allows an issuer to add themselves to the list of authorized issuers. 
This function checks that the caller is the issuer and adds them to the issuers mapping.

8 - The removeIssuer function allows an issuer to remove themselves from the list of authorized issuers. 
This function checks that the caller is the issuer and removes them from the issuers mapping.

9 - The addVerifier function allows a verifier to add themselves to the list of authorized verifiers. 
This function checks that the caller is the verifier and adds them to the verifiers mapping.

10 - The removeVerifier function allows a verifier to remove themselves from the list of authorized verifiers. 
This function checks that the caller is the verifier and removes them from the verifiers mapping.